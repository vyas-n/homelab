---
name: CI

"on":
  push:
    branches:
      - develop
    tags:
      - "*"
  pull_request:
    branches:
      - develop
  workflow_dispatch:

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

permissions:
  contents: write
  checks: write
  pull-requests: write

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      # Git Checkout
      - name: Checkout Code
        uses: actions/checkout@v3.0.2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      # MegaLinter: https://megalinter.github.io/configuration/
      - name: MegaLinter
        uses: megalinter/megalinter@v5.16.1
        env:
          VALIDATE_ALL_CODEBASE: true
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

          # Apply linter fixes configuration
          APPLY_FIXES: none
          APPLY_FIXES_EVENT: pull_request
          APPLY_FIXES_MODE: commit

      - name: Archive production artifacts
        if: ${{ success() }} || ${{ failure() }}
        uses: actions/upload-artifact@v3.1.0
        with:
          name: MegaLinter reports
          path: |
            report
            mega-linter.log
          retention-days: 10
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3.0.2
      - name: Put back the git branch into git (Earthly uses it for tagging)
        run: |
          branch=""
          if [ -n "$GITHUB_HEAD_REF" ]; then
            branch="$GITHUB_HEAD_REF"
          else
            branch="${GITHUB_REF##*/}"
          fi
          git checkout -b "$branch" || true
      - name: Download latest earthly
        run: |
          sudo /bin/sh -c 'wget https://github.com/earthly/earthly/releases/latest/download/earthly-linux-amd64 -O /usr/local/bin/earthly && chmod +x /usr/local/bin/earthly && /usr/local/bin/earthly bootstrap --with-autocomplete'
      - name: Earthly version
        run: earthly --version
      - name: Run build
        run: |
          earthly +all
          docker save netbox-app:local netbox-webserver:local | gzip > netbox-images.tar.gz
      - uses: actions/upload-artifact@v3.1.0
        with:
          name: netbox-images
          path: netbox-images.tar.gz
          retention-days: 1
      - name: Run test
        run: |
          earthly --allow-privileged +test
  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [build, lint]
    steps:
      - name: Checkout
        uses: actions/checkout@v3.0.2
      - run: |
          echo Release triggered
      - uses: actions/download-artifact@v3.0.0
        with:
          name: netbox-images
      - name: Load artifacts
        run: |
          docker load --input netbox-images.tar.gz
      - uses: ncipollo/release-action@v1.10.0
        if: startsWith(github.event.ref, 'refs/tags/')
        with:
          artifacts: "netbox-images.tar.gz"
          token: ${{ secrets.GITHUB_TOKEN }}
