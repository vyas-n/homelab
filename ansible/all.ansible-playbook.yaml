---
# Ansible Playbook Refs:
# - Syntax: https://docs.ansible.com/ansible/latest/user_guide/playbooks_intro.html#playbook-syntax
# - Collection Index: https://docs.ansible.com/ansible/latest/collections/index.html
# yaml-language-server: $schema=https://raw.githubusercontent.com/ansible/schemas/main/f/ansible.json#/$defs/playbook

# Provision TrueNAS
- name: Provision TrueNAS
  hosts: truenas
  tasks:
    - name: Creates directory & intermediate directories
      ansible.builtin.file:
        path: "{{ item.name }}"
        state: directory
        owner: admin
        group: root
        # Set directories as 0770 & files as 0660
        # ref: https://stackoverflow.com/a/29793833
        mode: u=rwX,g=rwX
      loop:
        - name: /mnt/app1/apps/dockge/stacks

# Deploy TrueNAS docker-compose Apps
- name: Deploy Homepage
  hosts: truenas
  vars:
    apps_fast_data_dir: /mnt/app1/apps
    apps_bulk_data_dir: /mnt/app2/apps
    apps_safe_data_dir: /mnt/data1/apps
    apps_dockge_stacks_dir: /mnt/app1/apps/dockge/stacks
  roles:
    - deploy_homepage
    - deploy_tsdproxy
# TODO: find an external-dns system for docker-compose apps
# - name: Deploy Traefik
#   ansible.builtin.import_playbook: ../truenas/apps/traefik/deploy.ansible-playbook.yml

# Provision Proxmox
- name: Provision Proxmox Hosts
  hosts: proxmox
  tasks:
    - name: Copy APT Repo sources
      # These files were modified to replace the default enterprise apt sources with the no-subscription variants
      # ref: https://pve.proxmox.com/wiki/Package_Repositories#sysadmin_no_subscription_repo
      ansible.builtin.copy:
        src: "{{ item.name }}"
        dest: /{{ item.name }}
        owner: root
        group: root
        mode: "0644"
      loop:
        - name: etc/apt/sources.list.d/ceph.list
        - name: etc/apt/sources.list.d/pve-enterprise.list
        - name: etc/apt/sources.list.d/pve-no-subscription.list
    - name: Install Tools
      ansible.builtin.apt:
        package:
          - fish
          - lldpd
        state: present
    - name: Make web interface accessible from 443
      # These steps were taken from: https://pve.proxmox.com/wiki/Web_Interface_Via_Nginx_Proxy
      block:
        - name: Install nginx
          ansible.builtin.apt:
            package:
              - nginx
            state: present
          notify:
            - RestartNginx
        - name: Remove default nginx config files
          ansible.builtin.file:
            path: "{{ item.name }}"
            state: absent
          loop:
            - name: /etc/nginx/sites-enabled/default
            - name: /etc/nginx/conf.d/default
          notify:
            - RestartNginx
        - name: Create a new nginx config file
          vars:
            proxmox_fqdn_hostname: proxmox-1.hosts.vyas-n.dev
          ansible.builtin.template:
            src: "{{ item.name }}.j2"
            dest: /{{ item.name }}
            owner: root
            group: root
            mode: "0644"
          loop:
            - name: etc/nginx/conf.d/proxmox.conf
          notify:
            - ValidateNginxConf
            - RestartNginx
        - name: Ensure that nginx systemd service override directory exists
          ansible.builtin.file:
            dest: /etc/systemd/system/nginx.service.d
            owner: root
            group: root
            mode: "0755"
            state: directory
        - name: Ensure that nginx gets only started after the certificates are available
          vars:
            proxmox_fqdn_hostname: proxmox-1.hosts.vyas-n.dev
          ansible.builtin.copy:
            src: "{{ item.name }}"
            dest: /{{ item.name }}
            owner: root
            group: root
            mode: "0644"
          loop:
            - name: etc/systemd/system/nginx.service.d/override.conf
          notify:
            - RestartNginx
  handlers:
    - name: ValidateNginxConf
      ansible.builtin.command:
        cmd: nginx -t
    - name: RestartNginx
      ansible.builtin.systemd_service:
        name: nginx
        daemon_reload: true
        state: restarted

- name: Disable macbook lid close turning the computer off
  # ref: https://youtu.be/FsPYgZYXyZw?si=HgeFVVoom-vbTYcs&t=481
  hosts: proxmox_1
  tasks:
    - name: Ensure that logind drop-in directory exists
      ansible.builtin.file:
        dest: /etc/systemd/logind.conf.d
        owner: root
        group: root
        mode: "0755"
        state: directory
    - name: Let laptop close lid
      ansible.builtin.copy:
        src: "{{ item.name }}"
        dest: /{{ item.name }}
        owner: root
        group: root
        mode: "0644"
      loop:
        - name: etc/systemd/logind.conf.d/let-laptop-close-lid.conf
      notify:
        - Restart systemd-logind
  handlers:
    - name: Restart systemd-logind
      ansible.builtin.systemd_service:
        name: systemd-logind
        state: restarted
